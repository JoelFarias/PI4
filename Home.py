"""
Dashboard ENEM 2024 - An√°lise de Fatores Familiares
P√°gina Inicial

Autor: Joel C.
Institui√ß√£o: IESB
Disciplina: PE-4
Data: Outubro 2025
"""

import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
from datetime import datetime

# Importar m√≥dulos do projeto
from src.utils.config import Config
from src.utils.constants import (
    TEXTO_CONTEXTUALIZACAO,
    NOMES_PROVAS,
    REGIOES,
)
from src.database.connection import test_database_connection
from src.database.queries import (
    get_notas_estatisticas,
    get_distribuicao_por_campo,
)


# ==============================================================================
# CONFIGURA√á√ÉO DA P√ÅGINA
# ==============================================================================

st.set_page_config(
    page_title=Config.APP_TITLE,
    page_icon=Config.APP_ICON,
    layout=Config.APP_LAYOUT,
    initial_sidebar_state="expanded",
)


# ==============================================================================
# ESTILO CUSTOMIZADO
# ==============================================================================

st.markdown("""
    <style>
    .main-header {
        font-size: 3rem;
        font-weight: bold;
        color: #1f77b4;
        text-align: center;
        margin-bottom: 1rem;
    }
    .sub-header {
        font-size: 1.5rem;
        color: #666;
        text-align: center;
        margin-bottom: 2rem;
    }
    .metric-card {
        background-color: #f0f2f6;
        padding: 1.5rem;
        border-radius: 0.5rem;
        border-left: 4px solid #1f77b4;
    }
    .info-box {
        background-color: #e8f4f8;
        padding: 1rem;
        border-radius: 0.5rem;
        border-left: 4px solid #17becf;
        margin: 1rem 0;
    }
    .warning-box {
        background-color: #fff3cd;
        padding: 1rem;
        border-radius: 0.5rem;
        border-left: 4px solid #ffc107;
        margin: 1rem 0;
    }
    </style>
""", unsafe_allow_html=True)


# ==============================================================================
# SIDEBAR - INFORMA√á√ïES E NAVEGA√á√ÉO
# ==============================================================================

with st.sidebar:
    st.image("https://img.icons8.com/fluency/96/000000/graduation-cap.png", width=80)
    st.title("üìä Dashboard ENEM 2024")
    st.markdown("---")
    
    # Informa√ß√µes do projeto
    st.markdown("### üìå Informa√ß√µes")
    st.info("""
    **Institui√ß√£o:** IESB  
    **Disciplina:** PE-4  
    **Autor:** Joel C.  
    **Data:** Outubro 2025
    """)
    
    st.markdown("---")
    
    # Status da conex√£o
    st.markdown("### üîå Status do Sistema")
    
    with st.spinner("Verificando conex√£o..."):
        sucesso, mensagem = test_database_connection()
    
    if sucesso:
        st.success(mensagem)
        st.metric("Status", "Conectado", delta="Operacional")
    else:
        st.error(mensagem)
        st.metric("Status", "Desconectado", delta="Erro")
    
    st.markdown("---")
    
    # Navega√ß√£o r√°pida
    st.markdown("### üó∫Ô∏è Navega√ß√£o R√°pida")
    st.markdown("""
    Explore as diferentes p√°ginas do dashboard:
    
    - üìä **Perfil dos Participantes**
    - üìà **An√°lise de Desempenho**
    - üîó **Correla√ß√£o com Fatores**
    - ü§ñ **Modelos Preditivos**
    - üó∫Ô∏è **An√°lise Geogr√°fica**
    - üí° **Insights e Conclus√µes**
    """)
    
    st.markdown("---")
    
    # Informa√ß√µes t√©cnicas
    if st.checkbox("üîß Informa√ß√µes T√©cnicas"):
        st.markdown("**Configura√ß√µes:**")
        st.code(f"""
Banco: {Config.get_database_config()['database']}
Cache TTL: {Config.CACHE_TTL}s
Ambiente: {'Produ√ß√£o' if Config.is_production() else 'Desenvolvimento'}
        """)


# ==============================================================================
# CABE√áALHO PRINCIPAL
# ==============================================================================

st.markdown('<div class="main-header">üìä Dashboard ENEM 2024</div>', unsafe_allow_html=True)
st.markdown(
    '<div class="sub-header">An√°lise de Correla√ß√£o entre Fatores Familiares e Desempenho Acad√™mico</div>',
    unsafe_allow_html=True
)

st.markdown("---")


# ==============================================================================
# CONTEXTUALIZA√á√ÉO DO PROBLEMA
# ==============================================================================

st.markdown("## üéØ Sobre o Projeto")

col1, col2 = st.columns([2, 1])

with col1:
    st.markdown(TEXTO_CONTEXTUALIZACAO)
    
    st.markdown("### üîç Quest√£o de Pesquisa")
    st.markdown("""
    > **"Qual √© a correla√ß√£o entre o desempenho dos alunos no ENEM 2024 
    > e o n√≠vel de escolaridade e ocupa√ß√£o dos seus pais?"**
    """)
    
    st.markdown("### üéØ Objetivos")
    st.markdown("""
    - ‚úÖ Analisar a distribui√ß√£o de desempenho no ENEM 2024
    - ‚úÖ Identificar correla√ß√µes entre fatores socioecon√¥micos e notas
    - ‚úÖ Desenvolver modelos preditivos de desempenho
    - ‚úÖ Visualizar padr√µes geogr√°ficos de desempenho
    - ‚úÖ Gerar insights acion√°veis para pol√≠ticas educacionais
    """)

with col2:
    st.markdown("### üìä Fonte de Dados")
    st.info("""
    **Banco de Dados:** PostgreSQL  
    **Servidor:** IESB  
    **Registros:** 4.3M participantes  
    **Per√≠odo:** ENEM 2024  
    **Atualiza√ß√£o:** Tempo real
    """)
    
    st.markdown("### üîó Vari√°veis Principais")
    st.success("""
    **Dependentes:**
    - Notas (CN, CH, LC, MT, Reda√ß√£o)
    
    **Independentes:**
    - Escolaridade dos pais
    - Ocupa√ß√£o dos pais  
    - Renda familiar
    - Fatores demogr√°ficos
    """)

st.markdown("---")


# ==============================================================================
# M√âTRICAS GERAIS (KPIs)
# ==============================================================================

st.markdown("## üìà Vis√£o Geral do ENEM 2024")

# Carregar estat√≠sticas
with st.spinner("Carregando estat√≠sticas gerais..."):
    try:
        stats = get_notas_estatisticas()
        
        if not stats.empty:
            stats_dict = stats.iloc[0].to_dict()
            
            # Tratar valores None para evitar erros de formata√ß√£o
            for key in stats_dict:
                if stats_dict[key] is None:
                    stats_dict[key] = 0.0
            
            # Primeira linha de m√©tricas - Total e M√©dias Principais
            col1, col2, col3, col4, col5 = st.columns(5)
            
            with col1:
                st.metric(
                    "üë• Total de Participantes",
                    f"{int(stats_dict['total_participantes']):,}".replace(",", "."),
                    help="N√∫mero total de participantes com notas v√°lidas"
                )
            
            with col2:
                st.metric(
                    "üìä M√©dia Geral",
                    f"{stats_dict['media_geral']:.1f}",
                    help="M√©dia das 5 notas (CN, CH, LC, MT, Reda√ß√£o)"
                )
            
            with col3:
                st.metric(
                    "üî¨ Ci√™ncias da Natureza",
                    f"{stats_dict['cn_media']:.1f}",
                    delta=f"{stats_dict['cn_media'] - stats_dict['media_geral']:.1f}",
                    help="M√©dia em Ci√™ncias da Natureza"
                )
            
            with col4:
                st.metric(
                    "üìö Ci√™ncias Humanas",
                    f"{stats_dict['ch_media']:.1f}",
                    delta=f"{stats_dict['ch_media'] - stats_dict['media_geral']:.1f}",
                    help="M√©dia em Ci√™ncias Humanas"
                )
            
            with col5:
                st.metric(
                    "üìù Linguagens e C√≥digos",
                    f"{stats_dict['lc_media']:.1f}",
                    delta=f"{stats_dict['lc_media'] - stats_dict['media_geral']:.1f}",
                    help="M√©dia em Linguagens e C√≥digos"
                )
            
            # Segunda linha de m√©tricas - Outras √°reas
            col1, col2, col3, col4, col5 = st.columns(5)
            
            with col1:
                st.metric(
                    "‚ûó Matem√°tica",
                    f"{stats_dict['mt_media']:.1f}",
                    delta=f"{stats_dict['mt_media'] - stats_dict['media_geral']:.1f}",
                    help="M√©dia em Matem√°tica"
                )
            
            with col2:
                st.metric(
                    "‚úçÔ∏è Reda√ß√£o",
                    f"{stats_dict['red_media']:.1f}",
                    delta=f"{stats_dict['red_media'] - stats_dict['media_geral']:.1f}",
                    help="M√©dia em Reda√ß√£o"
                )
            
            with col3:
                st.metric(
                    "üìä Mediana Geral",
                    f"{stats_dict['media_mediana']:.1f}",
                    help="Mediana das notas gerais"
                )
            
            with col4:
                st.metric(
                    "üìè Desvio Padr√£o",
                    f"{stats_dict['media_desvio']:.1f}",
                    help="Dispers√£o das notas"
                )
            
            with col5:
                st.metric(
                    "üéØ Amplitude",
                    f"{stats_dict['media_max'] - stats_dict['media_min']:.1f}",
                    help="Diferen√ßa entre maior e menor nota"
                )
            
            st.markdown("---")
            
            # Compara√ß√£o visual de m√©dias
            st.markdown("### üìä Compara√ß√£o de M√©dias por √Årea")
            
            # Preparar dados para o gr√°fico
            areas = ['CN', 'CH', 'LC', 'MT', 'Reda√ß√£o']
            medias = [
                stats_dict['cn_media'],
                stats_dict['ch_media'],
                stats_dict['lc_media'],
                stats_dict['mt_media'],
                stats_dict['red_media']
            ]
            
            # Criar gr√°fico de barras
            fig = go.Figure()
            
            fig.add_trace(go.Bar(
                x=areas,
                y=medias,
                text=[f"{m:.1f}" for m in medias],
                textposition='auto',
                marker_color=Config.COLOR_PALETTE[:5],
                hovertemplate='<b>%{x}</b><br>M√©dia: %{y:.2f}<extra></extra>'
            ))
            
            # Adicionar linha de refer√™ncia (m√©dia geral)
            fig.add_hline(
                y=stats_dict['media_geral'],
                line_dash="dash",
                line_color="red",
                annotation_text=f"M√©dia Geral: {stats_dict['media_geral']:.1f}",
                annotation_position="right"
            )
            
            fig.update_layout(
                title="M√©dia por √Årea de Conhecimento",
                xaxis_title="√Årea",
                yaxis_title="M√©dia",
                height=400,
                showlegend=False,
                hovermode='x unified'
            )
            
            st.plotly_chart(fig, use_container_width=True)
            
        else:
            st.warning("‚ö†Ô∏è N√£o foi poss√≠vel carregar as estat√≠sticas. Verifique a conex√£o com o banco de dados.")
    
    except Exception as e:
        st.error(f"‚ùå Erro ao carregar estat√≠sticas: {str(e)}")
        if Config.DEBUG_MODE:
            st.exception(e)

st.markdown("---")


# ==============================================================================
# DISTRIBUI√á√ïES B√ÅSICAS
# ==============================================================================

st.markdown("## üìä Distribui√ß√µes Demogr√°ficas")

col1, col2 = st.columns(2)

with col1:
    st.markdown("### üë• Distribui√ß√£o por Sexo")
    with st.spinner("Carregando dados..."):
        try:
            df_sexo = get_distribuicao_por_campo('tp_sexo')
            
            if not df_sexo.empty and len(df_sexo) > 0:
                # Os valores j√° v√™m como 'Feminino' e 'Masculino' do banco
                # N√£o √© necess√°rio mapeamento
                
                fig = px.pie(
                    df_sexo,
                    values='quantidade',
                    names='tp_sexo',
                    color_discrete_sequence=Config.COLOR_PALETTE,
                    hole=0.4
                )
                
                fig.update_traces(
                    textposition='inside',
                    textinfo='percent+label',
                    hovertemplate='<b>%{label}</b><br>Quantidade: %{value:,}<br>Percentual: %{percent}<extra></extra>'
                )
                
                fig.update_layout(height=350)
                
                st.plotly_chart(fig, use_container_width=True)
            else:
                st.info("üìä Dados n√£o dispon√≠veis")
        except Exception as e:
            st.error(f"‚ùå Erro: {str(e)}")
            if Config.DEBUG_MODE:
                st.exception(e)

with col2:
    st.markdown("### üåç Distribui√ß√£o por Regi√£o")
    with st.spinner("Carregando dados..."):
        try:
            df_regiao = get_distribuicao_por_campo('regiao_nome_prova')
            
            if not df_regiao.empty:
                fig = px.bar(
                    df_regiao,
                    x='regiao_nome_prova',
                    y='quantidade',
                    text='percentual',
                    color='regiao_nome_prova',
                    color_discrete_sequence=Config.COLOR_PALETTE
                )
                
                fig.update_traces(
                    texttemplate='%{text:.1f}%',
                    textposition='outside',
                    hovertemplate='<b>%{x}</b><br>Quantidade: %{y:,}<extra></extra>'
                )
                
                fig.update_layout(
                    showlegend=False,
                    xaxis_title="Regi√£o",
                    yaxis_title="Quantidade",
                    height=350
                )
                
                st.plotly_chart(fig, use_container_width=True)
            else:
                st.info("Dados n√£o dispon√≠veis")
        except Exception as e:
            st.error(f"Erro: {str(e)}")

st.markdown("---")


# ==============================================================================
# CALL TO ACTION
# ==============================================================================

st.markdown("## üöÄ Explore o Dashboard")

col1, col2, col3 = st.columns(3)

with col1:
    st.markdown("""
    ### üìä An√°lise Explorat√≥ria
    
    Explore o perfil dos participantes, distribui√ß√µes de notas
    e caracter√≠sticas demogr√°ficas.
    
    üëâ **Acesse:** P√°ginas 1 e 2 na sidebar
    """)

with col2:
    st.markdown("""
    ### üîó An√°lise de Correla√ß√£o
    
    Descubra como fatores familiares se correlacionam
    com o desempenho acad√™mico.
    
    üëâ **Acesse:** P√°gina 3 na sidebar
    """)

with col3:
    st.markdown("""
    ### ü§ñ Modelos Preditivos
    
    Veja predi√ß√µes baseadas em machine learning
    e identifique padr√µes ocultos.
    
    üëâ **Acesse:** P√°ginas 4, 5 e 6 na sidebar
    """)

st.markdown("---")


# ==============================================================================
# RODAP√â
# ==============================================================================

st.markdown("---")

col1, col2, col3 = st.columns(3)

with col1:
    st.markdown("""
    **üìö Fonte de Dados:**  
    INEP - Microdados ENEM 2024  
    FIRJAN - √çndice de Desenvolvimento Municipal
    """)

with col2:
    st.markdown("""
    **üè´ Institui√ß√£o:**  
    IESB - Centro Universit√°rio  
    Disciplina: PE-4
    """)

with col3:
    st.markdown(f"""
    **üìÖ Atualiza√ß√£o:**  
    {datetime.now().strftime('%d/%m/%Y %H:%M')}  
    Vers√£o: 1.0.0
    """)

st.markdown("---")
st.markdown(
    "<div style='text-align: center; color: #666;'>Desenvolvido com ‚ù§Ô∏è usando Streamlit e Python üêç</div>",
    unsafe_allow_html=True
)
